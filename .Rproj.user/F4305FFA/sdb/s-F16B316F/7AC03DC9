{
    "collab_server" : "",
    "contents" : "install.packages(\"devtools\")\nfilename <- \"data/femalemiceweights.csv\"\ndat <- read.csv(filename)\nhead(dat)\n\nlibrary(dplyr)\ncontrol <- filter(dat,Diet==\"chow\") %>% select(Bodyweight) %>% unlist\ntreatment <- filter(dat,Diet == \"hf\") %>% select(Bodyweight) %>% unlist\nprint(mean(treatment))\nprint(mean(control))\nobsdiff <- mean(treatment)-mean(control)\nprint(obsdiff)\n\n\n#starting with downloading\nlibrary(downloader) \nurl <- \"https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv\"\nfilename <- basename(url)\ndownload(url, destfile=paste(\"data/\",filename,sep=\"\"))\nx <- unlist( read.csv(paste(\"data/\",filename,sep=\"\")) )\n\n\n#Question 1: chance of 1 gram difference\np1 <- vector(\"numeric\",1000)\nset.seed(1)\nfor (i in 1:1000){\n        p1[i]=mean(sample(x,5,replace=F))\n}\nmean(abs(p1-mean(x))> 1)\n\n\n#nothing much changes when we increase number of computes from 1000 to 10000\np2 <- vector(\"numeric\",10000)\nset.seed(1)\nfor (i in 1:10000){\n        p2[i]=mean(sample(x,5,replace=F))\n}\nmean(abs(p2-mean(x))> 1)\n\n#watch as we increase sample size from 5 to 50, how the probability drops!\np3 <- vector(\"numeric\",1000)\nset.seed(1)\nfor (i in 1:1000){\n        p3[i]=mean(sample(x,50,replace=F))\n}\nmean(abs(p3-mean(x))> 1)\nmean(p3<25)-mean(p3<23)\nhist(p1)\nhist(p3)\npnorm(25,23.9,0.43)-pnorm(23,23.9,0.43)\n\n\n\n\n\n\n\n#       If you have the population data, then find probability that\n#       you can randomly get the difference you observed. \n#       this is called the p value\n\nfilename <- \"data/femaleControlsPopulation.csv\"\npopulation <- read.csv(filename)\npopulation <- unlist(population)\ncentraltomean <- function(n){\n        obsdiff=vector(\"numeric\",length=n)\n        for (i  in (1:n)) {\n                control <- sample(population,12)\n                treatment <- sample(population,12)\n                obsdiff[i]=mean(control)-mean(treatment)\n        }\n        obsdiff\n}\npvalue <- function(nval,n=10000){\n        obsdiff=vector(\"numeric\",length=n)\n        for (i  in (1:n)) {\n                control <- sample(population,12)\n                treatment <- sample(population,12)\n                obsdiff[i]=mean(control)-mean(treatment)\n        }\n        sum(abs(obsdiff)>=nval)/n\n}\nfor (i in c(1,10,100,1000,10000,100000)) {\nprint(paste(\"mean for \" , i,\"observations = \",mean(centraltomean(i))))\n\n}\n\n\n\n\n\n#Mice Phone Data\ndat <- read.csv(\"data/mice_pheno.csv\") \ndat <- na.omit (dat)\nhead(dat)\np1 = subset(dat,dat$Sex==\"M\" & dat$Diet==\"chow\")$Bodyweight\np2 = filter(dat,dat$Sex==\"M\" & dat$Diet==\"chow\")$Bodyweight\np3 = select(filter(dat,dat$Sex==\"M\" & dat$Diet==\"chow\"),Bodyweight)\np4=dat[dat$Sex==\"M\" & dat$Diet==\"chow\",]$Bodyweight\np5=dat[dat$Sex==\"M\" & dat$Diet==\"chow\",3]\np6=select(dat[dat$Sex==\"M\" & dat$Diet==\"chow\",],Bodyweight)\n\nlibrary(rafalib)\npopsd(p5)\nset.seed(1)\nmean(sample(p5,25))\nmean(sample(dat,25))\nset.seed(1)\nmean(subset(dat,dat$Sex==\"M\" & dat$Diet==\"hf\")$Bodyweight)\n\nset.seed(1)\nmean(sample(dat[dat$Sex==\"M\" & dat$Diet==\"hf\",\"Bodyweight\"],25))\n\n\npopsd(dat[,\"Bodyweight\"])\n6.256706\nsd(dat[,\"Bodyweight\"])\n6.260429\npopsd(subset(dat,dat$Sex==\"M\" & dat$Diet==\"hf\")$Bodyweight)\n\n\nset.seed(1)\nf2 = mean(sample(dat[dat$Sex==\"F\" & dat$Diet==\"hf\",\"Bodyweight\"],25))\nf3 = mean(sample(dat[dat$Sex==\"F\" & dat$Diet==\"chow\",\"Bodyweight\"],25))\nf3\n(mean(dat[dat$Sex==\"F\" & dat$Diet==\"chow\",3])-23.1692)-\n        (mean(subset(dat,dat$Sex==\"F\" & dat$Diet==\"hf\")$Bodyweight)-26.2812)\n\np = dat[dat$Sex==\"M\" & dat$Diet==\"chow\",3]\nsdt = popsd(p)\nmnt = mean(p)\nmean(p<mnt+sdt) - mean(p<mnt-sdt)\nmean(p<mnt+2*sdt) - mean(p<mnt-2*sdt)\nmean(p<mnt+3*sdt) - mean(p<mnt-3*sdt)\n\n\nqqnorm(p)\nabline(0,1)\n\n\n\n\n#drawing quantile quantile plots to check our distribution with the normal distribution\n\nmypar(2,2)\ny <- filter(dat, Sex==\"M\" & Diet==\"chow\") %>% select(Bodyweight) %>% unlist\nz <- ( y - mean(y) ) / popsd(y)\nqqnorm(z);abline(0,1)\ny <- filter(dat, Sex==\"F\" & Diet==\"chow\") %>% select(Bodyweight) %>% unlist\nz <- ( y - mean(y) ) / popsd(y)\nqqnorm(z);abline(0,1)\ny <- filter(dat, Sex==\"M\" & Diet==\"hf\") %>% select(Bodyweight) %>% unlist\nz <- ( y - mean(y) ) / popsd(y)\nqqnorm(z);abline(0,1)\ny <- filter(dat, Sex==\"F\" & Diet==\"hf\") %>% select(Bodyweight) %>% unlist\nz <- ( y - mean(y) ) / popsd(y)\nqqnorm(z);abline(0,1)\n\n\n\n#Using replicate to get repeat sample averaging many times\ny <- filter(dat, Sex==\"M\" & Diet==\"chow\") %>% select(Bodyweight) %>% unlist\navgs <- replicate(10000, mean( sample(y, 25)))\nmypar(1,2)\nhist(avgs)\nqqnorm(avgs)\nqqline(avgs)\nmean(avgs)\npopsd(avgs)\n",
    "created" : 1463910597526.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2291173908",
    "id" : "7AC03DC9",
    "lastKnownWriteTime" : 1463933462,
    "last_content_update" : 1463933462052,
    "path" : "C:/Users/Rahul/PycharmProjects/EDXDataforLifeSciences/PH525.1X/random_variables_and_probability_distributions.R",
    "project_path" : "random_variables_and_probability_distributions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}