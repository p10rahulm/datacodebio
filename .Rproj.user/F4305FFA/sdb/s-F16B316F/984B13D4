{
    "collab_server" : "",
    "contents" : "install.packages(\"gapminder\")\nlibrary(gapminder)\ndata(gapminder)\nhead(gapminder)\nlifex1952=as.numeric(gapminder[gapminder[,3]==1952,4]$lifeExp)\n#lifex1952 = as.numeric(lifex1952$lifeExp)\nhist(lifex1952)\nclass(lifex1952)\nmean(lifex1952<40)\n\n\n# Suppose we want to plot the proportions of countries with life expectancy \n# 'q' for a range of different years. R has a built in function for this, \n# plot(ecdf(x)), but suppose we didn't know this. The function is quite easy \n# to build, by turning the code from question 1.1 into a custom function, \n# and then using sapply(). Our custom function will take an input variable 'q', \n# and return the proportion of countries in 'x' less than or equal to q. The \n# curly brackets { and }, allow us to write an R function which spans multiple lines:\n\n\nprop = function(q) {\n        mean(lifex1952 <= q)\n}\nqs = seq(from=min(lifex1952), to=max(lifex1952), length=20)\nprops = sapply(qs, prop)\nplot(qs, props)\n",
    "created" : 1463921928635.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2590406989",
    "id" : "984B13D4",
    "lastKnownWriteTime" : 1463923438,
    "last_content_update" : 1463923438674,
    "path" : "C:/Users/Rahul/PycharmProjects/EDXDataforLifeSciences/PH525.1X/gapminder.R",
    "project_path" : "gapminder.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}